// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using transportadores.infra;

#nullable disable

namespace transportadores.infra.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("transportadores.dominio.entidades.Despesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MotoristaId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorDespesa")
                        .HasColumnType("numeric");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MotoristaId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Despesa");
                });

            modelBuilder.Entity("transportadores.dominio.entidades.Motorista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cnh")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataContratacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Motorista");
                });

            modelBuilder.Entity("transportadores.dominio.entidades.Peca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataProximaManutencao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("QuilometragemProximaManutencao")
                        .HasColumnType("real");

                    b.Property<float>("QuilometragemUltimaManutencao")
                        .HasColumnType("real");

                    b.Property<int>("TipoPecaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UltimaManutenção")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TipoPecaId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Peca");
                });

            modelBuilder.Entity("transportadores.dominio.entidades.TipoPeca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("KilometragemRevisao")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TipoPeca");
                });

            modelBuilder.Entity("transportadores.dominio.entidades.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Chassi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MotoristaId")
                        .HasColumnType("integer");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Quilometragem")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("MotoristaId")
                        .IsUnique();

                    b.ToTable("Veiculo");
                });

            modelBuilder.Entity("transportadores.dominio.entidades.Despesa", b =>
                {
                    b.HasOne("transportadores.dominio.entidades.Motorista", null)
                        .WithMany("Despesas")
                        .HasForeignKey("MotoristaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("transportadores.dominio.entidades.Veiculo", null)
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("transportadores.dominio.entidades.Peca", b =>
                {
                    b.HasOne("transportadores.dominio.entidades.TipoPeca", "TipoPeca")
                        .WithMany("PecasRegistradas")
                        .HasForeignKey("TipoPecaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("transportadores.dominio.entidades.Veiculo", null)
                        .WithMany("Pecas")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoPeca");
                });

            modelBuilder.Entity("transportadores.dominio.entidades.Veiculo", b =>
                {
                    b.HasOne("transportadores.dominio.entidades.Motorista", "Motorista")
                        .WithOne("Veiculo")
                        .HasForeignKey("transportadores.dominio.entidades.Veiculo", "MotoristaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motorista");
                });

            modelBuilder.Entity("transportadores.dominio.entidades.Motorista", b =>
                {
                    b.Navigation("Despesas");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("transportadores.dominio.entidades.TipoPeca", b =>
                {
                    b.Navigation("PecasRegistradas");
                });

            modelBuilder.Entity("transportadores.dominio.entidades.Veiculo", b =>
                {
                    b.Navigation("Pecas");
                });
#pragma warning restore 612, 618
        }
    }
}
